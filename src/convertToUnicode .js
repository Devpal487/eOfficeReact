// HindiUnicode.js
const arrayOne = [

    "aa", "a",
    "ZZ", "Z",
    "=kk", "=k",
    "f=k", "f=",
    
    "Q+Z", "QZ+",
    "sas", "sa",
    
    "‚Äò", "\"",
    "‚Äô", "\"",
    "‚Äú", "'",
    "‚Äù", "'",
    
    "∆í", "‡•ß",
    "‚Äû", "‡•®",
    "‚Ä¶", "‡•©",
    "‚Ä†", "‡•™",
    "‚Ä°", "‡•´",
    "ÀÜ", "‡•¨",
    "‚Ä∞", "‡•≠",
    "≈†", "‡•Æ",
    "‚Äπ", "‡•Ø",
    "≈í", "‡•¶",
    "√•", "‡•¶",
    
    "v‚Äö", "‡§ë",
    "vks", "‡§ì",
    "vkS", "‡§î",
    "vk", "‡§Ü",
    "v", "‡§Ö",
    "b¬±", "‡§à‡§Ç",
    "√É", "‡§à",
    "bZ", "‡§à",
    "b", "‡§á",
    "m", "‡§â",
    "√Ö", "‡§ä",
    ",s", "‡§ê",
    ",", "‡§è",
    "_", "‡§ã",
    
    
    "d+", "‡•ò",
    "[+", "‡•ô‡•ç",
    "x+", "‡•ö",
    "T+", "‡•õ‡•ç",
    "t+", "‡•õ",
    "M+", "‡•ú",
    "<+", "‡•ù",
    "¬∂+", "‡•û‡•ç",
    "Q+", "‡•û",
    ";+", "‡•ü",
    "j+", "‡§±",
    "u+", "‡§©",
    
    "d", "‡§ï",
    "D", "‡§ï‡•ç",
    "¬£", "‡§ñ‡•ç‡§∞",
    "[", "‡§ñ‡•ç",
    "x", "‡§ó",
    "X", "‡§ó‡•ç",
    "√Ñ", "‡§ò",
    "?", "‡§ò‡•ç",
    "¬≥", "‡§ô",
    "p", "‡§ö",
    "P", "‡§ö‡•ç",
    "N", "‡§õ",
    "t", "‡§ú",
    "T", "‡§ú‡•ç",
    ">", "‡§ù",
    "√∑", "‡§ù‡•ç",
    "√ñ", "‡§ù‡•ç",
    "¬•", "‡§û",
    "V", "‡§ü",
    "B", "‡§†",
    "M", "‡§°",
    "<", "‡§¢",
    ".", "‡§£‡•ç",
    "r", "‡§§",
    "R", "‡§§‡•ç",
    "F", "‡§•‡•ç",
    "n", "‡§¶",
    "/", "‡§ß‡•ç",
    "√ã", "‡§ß‡•ç",
    "√®", "‡§ß‡•ç",
    "u", "‡§®",
    "U", "‡§®‡•ç",
    "i", "‡§™",
    "I", "‡§™‡•ç",
    "Q", "‡§´",
    "¬∂", "‡§´‡•ç",
    "c", "‡§¨",
    "C", "‡§¨‡•ç",
    "√í", "‡§≠",
    "H", "‡§≠‡•ç",
    "e", "‡§Æ",
    "E", "‡§Æ‡•ç",
    ";", "‡§Ø",
    "¬∏", "‡§Ø‡•ç",
    "j", "‡§∞",
    "y", "‡§≤",
    "Y", "‡§≤‡•ç",
    "G", "‡§≥",
    "√úo", "‡§∂‡•ç‡§µ",
    "√úk", "‡§∂", // as used in 'shringaal' etc
    "√úz", "‡§∂‡•ç‡§∞‡•ç",
    "o", "‡§µ",
    "O", "‡§µ‡•ç",
    
    "'", "‡§∂‡•ç",
    "\"", "‡§∑‡•ç",
    "l", "‡§∏",
    "L", "‡§∏‡•ç",
    "g", "‡§π",
    
    "√ë", "‡§ï‡•É",
    "‚Äî", "‡§ï‡•É",
    "√¥", "‡§ï‡•ç‡§ï",
    "√§", "‡§ï‡•ç‡§§",
    "{", "‡§ï‡•ç‡§∑‡•ç",
    "K", "‡§ú‡•ç‡§û",
    
    "√™", "‡§ü‡•ç‡§ü",
    "√ç", "‡§ü‡•ç‡§ü",
    "√´", "‡§ü‡•ç‡§†",
    "√é", "‡§ü‡•ç‡§†",
    "√∞", "‡§†‡•ç‡§†",
    "√è", "‡§°‡•ç‡§°",
    "√¨", "‡§°‡•ç‡§°",
    "√Ø", "‡§°‡•ç‡§¢",
    "√î", "‡§°‡•ç‡§¢",
    
    "√ô", "‡§§‡•ç‡§§‡•ç",
    "=", "‡§§‡•ç‡§∞",
    "¬´", "‡§§‡•ç‡§∞‡•ç",
    "‚Äì", "‡§¶‡•É",
    "√å", "‡§¶‡•ç‡§¶",
    "√≠", "‡§¶‡•ç‡§¶",
    "\)", "‡§¶‡•ç‡§ß",
    "Àú", "‡§¶‡•ç‡§≠",
    "√∂", "‡§¶‡•ç‡§≠",
    "|", "‡§¶‡•ç‡§Ø",
    "}", "‡§¶‡•ç‡§µ",
    "√©", "‡§®‡•ç‡§®",
    "‚Ñ¢", "‡§®‡•ç‡§®‡•ç",
    
    "√≥", "‡§∏‡•ç‡§§‡•ç‡§∞",
    "√¢", "‡§π‡•É",
    "√†", "‡§π‡•ç‡§®",
    "√£", "‡§π‡•ç‡§Æ",
    "√°", "‡§π‡•ç‡§Ø",
    "¬∫", "‡§π‡•ç",
    
    "J", "‡§∂‡•ç‡§∞",
    "√ò", "‡§ï‡•ç‡§∞",
    "√ù", "‡§´‡•ç‡§∞",
    "√¶", "‡§¶‡•ç‡§∞",
    "√ß", "‡§™‡•ç‡§∞",
    "√Å", "‡§™‡•ç‡§∞",
    "#", "‡§∞‡•Å",
    ":", "‡§∞‡•Ç",
    
    "√ì", "‡•ç‡§Ø",
    "√Æ", "‡•ç‡§Ø",
    "z", "‡•ç‡§∞",
    "¬™", "‡•ç‡§∞",
    
    // "√á" ,	"‡§ø‡§Ç", 
    "√à", "‡•Ä‡§Ç",
    "√ä", "Z‡•Ä",
    "\‚Ä∫", "Z‡•à‡§Ç",
    "√µ", "Z‡•à‡§Ç",
    "¬±", "Z‡§Ç",
    "√Ü", "‡§∞‡•çf",
    "√â", "‡§∞‡•ç√á",
    
    "‡•çk", "",
    
    "‚Äö", "‡•â",
    "¬®", "‡•ã",
    "¬Æ", "‡•ã",
    "ks", "‡•ã",
    "¬©", "‡•å",
    "kS", "‡•å",
    "h", "‡•Ä",
    "q", "‡•Å",
    "w", "‡•Ç",
    "`", "‡•É",
    "s", "‡•á",
    "¬¢", "‡•á", //suitable for ka
    "S", "‡•à",
    "a", "‡§Ç",
    "¬°", "‡§Å",
    "%", "‡§É",
    "W", "‡•Ö",
    "‚Ä¢", "‡§Ω",
    "¬∑", "‡§Ω",
    "‚àô", "‡§Ω",
    "¬∑", "‡§Ω",
    "~", "‡•ç",
    "+", "‡§º",
    "k", "‡§æ",
    
    "A", "‡•§",
    "√±", "‡•∞",  // laaghava
    
    "\\", "?",
    " ‡§É", " :",
    "^", "‚Äò",
    "*", "‚Äô",
    "√û", "‚Äú",
    "√ü", "‚Äù",
    "(", ";",
    "¬º", "(",
    "¬Ω", ")",
    "¬ø", "{",
    "√Ä", "}",
    "¬æ", "=",
    "-", ".", // full stop?
    "&", "-",
    //"&" ,	"¬µ" ,
    "]", ",",
    "@", "/",
    
    "~ ", "‡•ç ",
    "‡§æ‡•á", "‡•ã",
    "‡§æ‡•Ö", "‡•â",
    "‡•á‡•ç‡§∞", "‡•ç‡§∞‡•á",
    "‡§Ö‡•å", "‡§î",
    "‡§Ö‡•ã", "‡§ì",
    "‡§Ü‡•Ö", "‡§ë"]


    // export const convertToUnicode = (text) => {
    //     // Implement your conversion logic here
    //     let convertedText = text;
    
    //     for (let i = 0; i < arrayOne.length; i += 2) {
    //         const re = new RegExp(arrayOne[i], 'g');
    //         convertedText = convertedText.replace(re, arrayOne[i + 1]);
    //     }
    
    //     return convertedText;
    // };


    export function convertToUnicode(text) {
        console.log("üöÄ ~ convertToUnicode ~ text:", text);
        let convertedText = text;
      
        for (let i = 0; i < arrayOne.length; i += 2) {
            const re = new RegExp(arrayOne[i], 'g');
            convertedText = convertedText.replace(re, arrayOne[i + 1]);
        }
      
        return convertedText;
    }